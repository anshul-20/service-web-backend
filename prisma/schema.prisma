// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  phoneNumber  String
  role         Role
  // lng Number
  // lat Number
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
  Session      Session[]
  Services     Service[]
  Orders       Order[]   @relation("order_owner")
  WorkedOrders Order[]   @relation("order_worker")
}

model Session {
  id        Int      @id @default(autoincrement())
  expiresOn DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Service {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  name      String
  price     Int
  users     User[]
  orders    Order[]
}

model Order {
  id          Int      @id @default(autoincrement())
  description String
  address     String
  status      Status
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  service     Service  @relation(fields: [serviceId], references: [id])
  serviceId   Int
  userId      Int
  workerId    Int?
  user        User     @relation("order_owner", fields: [userId], references: [id], onDelete: Cascade)
  worker      User?    @relation("order_worker", fields: [workerId], references: [id], onDelete: Cascade)
}

enum Role {
  WORKER
  CUSTOMER
}

enum Status {
  PROCESSING
  ACTIVE
  DONE
  REJECTED
}
